<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection"#>
<#@ import namespace="System.Data.Entity"#>
<#@ import namespace="EFAutomation"#>
<#@ import namespace="System.Data.Entity.Migrations"#>
<#@ import namespace="System.Data.Entity.Infrastructure"#>
<#@ parameter type="System.Collections.Generic.List<Type>" name="Types"#>
<#@ parameter type="System.Collections.Generic.List<String>" name="Assemblies"#>

namespace EFMigrations 
{
	using System.Data.Entity.Migrations;
	using System.Data.Entity;
	using System.Data.Entity.Infrastructure;
	using System.Data.Entity.Validation;
	using EFAutomation;
	using System.Collections.Generic;

	<#foreach(var assembly in Assemblies)
		 { #>
			using <#= assembly #>;
		<# } #>


	public class Context : DbContext, IContext
	{
		public Context(string connection) : base(connection) {}
		<#foreach(var type in Types) 
			{#>
			
			public DbSet<<#= type.Name #>> <#= type.Name #>s { get; set; }

		<# } #>

		public event ModelCreatingEventHandler ModelCreating;
		public event SavingChangesEventHandler SavingChanges;
				
		public new bool ShouldValidateEntity(DbEntityEntry entityEntry){ 
			return base.ShouldValidateEntity(entityEntry);
		}

		public override int SaveChanges() {
			if(SavingChanges != null)
				SavingChanges(this, new SavingChangesEventArgs(){ Context = this }); 
			return base.SaveChanges();
		}

		public new void OnModelCreating(DbModelBuilder modelBuilder){

			if(ModelCreating != null)
				ModelCreating(this, new ModelBuilderEventArgs(){ ModelBuilder = modelBuilder } );
			base.OnModelCreating(modelBuilder);
		}

		public new DbEntityValidationResult ValidateEntity(DbEntityEntry entityEntry, IDictionary<object, object> items)
		{
			return base.ValidateEntity(entityEntry, items);
		}
	}

	public class ContextFactory : IDbContextFactory<Context>
	{
		public Context Create()
		{
			return new Context("DefaultConnection");
		}
	}
	
	public class Configuration : DbMigrationsConfiguration<Context>
	{
		public Configuration()
		{
			AutomaticMigrationsEnabled = true;
			//MigrationsDirectory = "Migrations";
			AutomaticMigrationDataLossAllowed = true;
		}

				
	}
}